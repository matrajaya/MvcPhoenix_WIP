@model MvcPhoenix.Models.BulkContainerViewModel
@{
    ViewBag.Title = "Edit Bulk Container";
}

<div class="container-fluid">
    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <img src="~/Client/LogoFile?id=@Model.clientid" style="width: auto; height: 73px; float: right" alt="@Model.clientname logo">
        </div>
        <div class="col-lg-12">
            <h1 class="page-header">
                @ViewBag.Title
            </h1>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-md-12">
            <div class="pull-left">
                <i class="fa fa-arrow-circle-left"></i> @Html.ActionLink("Back to Bulk Main", "Index", "Bulk")
            </div>
            <div style="text-align:center;">
                <span id="dvSaveResult" style="color:green;font-weight:bold;"><strong>@TempData["SaveResult"]</strong></span>
                <div class="pull-right">
                    <span class="pull-right label label-info">Bulk Id: @Model.bulkid.ToString()</span>
                </div>
            </div>
        </div>
    </div>
    <div>
    </div>

    @using (Html.BeginForm("Save", "Bulk"))
    {
        <!-- do not remove -->
        @Html.HiddenFor(m => m.bulkid)
        @Html.HiddenFor(m => m.clientid)
        @Html.HiddenFor(m => m.productmasterid)

        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#prodinfopan"><i class="fa fa-file-text-o fa-fw"></i> Product Batch / Lot Information</h3>
            </div>
            <div id="prodinfopan" class="panel-body collapse in">
                <div class="row">
                    <div class="form-group col-md-9">
                        <label>Master Code - Name</label>
                        <p class="lead">
                            @Html.DisplayFor(m => m.MasterCode, new { @class = "form-control" }) - @Html.DisplayFor(m => m.MasterName, new { @class = "form-control" })
                        </p>
                    </div>
                    <div class="form-group col-md-3">
                        <label>Bulk Status</label>
                        @Html.DropDownListFor(m => m.bulkstatus, Model.ListOfBulkStatusIDs, new { @class = "form-control" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label>Client</label>
                        @Html.TextBoxFor(m => m.clientname, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.clientname)
                    </div>
                    <div class="form-group col-md-2">
                        <label>Date Received</label>
                        @Html.TextBoxFor(m => m.receivedate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                        @Html.ValidationMessageFor(m => m.receivedate)
                    </div>
                    <div class="form-group col-md-2">
                        <label>Carrier</label>
                        @Html.DropDownListFor(m => m.carrier, Model.ListOfCarriers, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.carrier)
                    </div>
                    <div class="form-group col-md-2">
                        <label>Warehouse</label>
                        @Html.DropDownListFor(m => m.warehouse, Model.ListOfWareHouses, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.warehouse)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <label>Lot Number</label>
                        @Html.TextBoxFor(m => m.lotnumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.lotnumber)
                    </div>
                    <div class="form-group col-md-3">
                        <label>Bin</label>
                        @Html.TextBoxFor(m => m.bin, new { @class = "form-control" })
                    </div>
                    <div class="form-group col-md-3">
                        <label>Current Weight</label>
                        @Html.TextBoxFor(m => m.currentweight, new { @class = "form-control", @readonly = "readonly" })
                        @Html.HiddenFor(m => m.currentweight)
                    </div>
                    <div class="form-group col-md-3">
                        <label>Receive Weight</label>
                        @Html.TextBoxFor(m => m.receiveweight, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.receiveweight)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <label>Entered By</label>
                        @Html.TextBoxFor(m => m.enteredby, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.enteredby)
                    </div>
                    <div class="form-group col-md-3">
                        <label>Received By</label>
                        @Html.TextBoxFor(m => m.receivedby, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.receivedby)
                    </div>
                    <div class="form-group col-md-3">
                        <label>COA Included?</label>
                        @Html.CheckBox("coaincluded", Model.coaincluded != null && (bool)Model.coaincluded, new { @class = "checkbox" })
                    </div>
                    <div class="form-group col-md-3">
                        <label>MSDS Included?</label>
                        @Html.CheckBox("msdsincluded", Model.msdsincluded != null && (bool)Model.msdsincluded, new { @class = "checkbox" })
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <label>Manufacture Date</label>
                        @Html.TextBoxFor(m => m.mfgdate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                        @Html.ValidationMessageFor(m => m.mfgdate)
                    </div>
                    <div class="form-group col-md-3">
                        <label>Expiration Date</label>
                        @Html.TextBoxFor(m => m.expirationdate, "{0:dd-MMM-yyyy}", new { @class = " date-picker form-control", @onchange = "ChangeCeaseShipDate(this.value);" })
                        @Html.ValidationMessageFor(m => m.expirationdate)
                    </div>
                    <div class="form-group col-md-3">
                        <label>Cease Ship Date</label>
                        @Html.TextBoxFor(m => m.ceaseshipdate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                        @Html.ValidationMessageFor(m => m.ceaseshipdate)
                    </div>
                    <div class="form-group col-md-3">
                        <label>QC Date</label>
                        @Html.TextBoxFor(m => m.qcdate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                        @Html.ValidationMessageFor(m => m.qcdate)
                    </div>
                </div>
            </div>
        </div>

        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#containerinfopan"><i class="fa fa-file-text-o fa-fw"></i> Container Information</h3>
            </div>
            <div id="containerinfopan" class="panel-body collapse in">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-6">
                                <label>Container Note</label>
                                @Html.TextAreaFor(m => m.containernotes, new { @class = "form-control", @rows = 5 })
                                @Html.ValidationMessageFor(m => m.containernotes)
                            </div>
                            <div class="col-md-6">
                                <label>Bulk Label Note</label>
                                @Html.TextAreaFor(m => m.bulklabelnote, new { @class = "form-control", @rows = 5 })
                                @Html.ValidationMessageFor(m => m.bulklabelnote)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label>Bin</label>
                                @Html.TextBoxFor(m => m.bin, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.bin)
                            </div>
                            <div class="form-group col-md-6">
                                <label>Container Color</label>
                                @Html.TextBoxFor(m => m.containercolor, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.containercolor)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Container Type</label>
                                @Html.DropDownListFor(m => m.containertype, Model.ListOfContainerTypeIDs, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.containertype)
                            </div>
                            <div class="col-md-6">
                                <label>Unit Measure</label>
                                @if (Model.isknownmaterial == true)
                                {
                                    @Html.DropDownListFor(m => m.um, Model.ListOfUMs, new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.um, new { @class = "form-control" })
                                }
                                @Html.ValidationMessageFor(m => m.um)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                <input id="btnSave" type="submit" value="Save Changes" class="btn btn-success btn-block" />
            </div>
            <div class="form-group col-md-6">
                @Html.ActionLink("Cancel", "Index", "Bulk", null, new { @class = "btn btn-danger btn-block", onclick = "return confirm('Cancel This Process?')" })
            </div>
        </div>
        <div class="row">
            @if (@Model.UpdateUser != null)
            {
                <div class="col-md-12 form-group"><em>Last updated by @Html.DisplayFor(m => m.UpdateUser) on @Html.DisplayFor(m => m.UpdateDate) GMT</em></div>
            }
        </div>
        <div class="row">
            <div class="col-lg-12">
                <i class="fa fa-arrow-circle-up"></i> <a href="#top">Back to Top</a>
                <span class="pull-right"><a href="#top">Back to Top</a> <i class="fa fa-arrow-circle-up"></i></span>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    function ChangeCeaseShipDate(date) {
        var ceaseshipdiff = '@Model.pm_ceaseshipdifferential';
        var expirationdate = date;
        var ceasedate = addDays(expirationdate, ceaseshipdiff);
        $('#ceaseshipdate').val($.datepicker.formatDate('dd-M-yy', ceasedate));
    }

    function addDays(date, days) {
        var result = new Date(date);
        result.setDate(result.getDate() - days);
        return result;
    }
</script>