<ul id="menu" class="nav navbar-nav side-nav">
    @{
        if (HttpContext.Current.User.Identity.IsAuthenticated)
        {
            if (User.IsInRole("Admin"))
            {
                <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-fw fa-dashboard"></i> Dashboards</a></li>
                <li><a href="@Url.Action("Index", "Orders")"><i class="fa fa-fw fa-stack-exchange"></i> Orders</a></li>
                <li><a href="@Url.Action("Index", "Invoice")"><i class="fa fa-fw fa-calculator"></i> Invoicing</a></li>
                <li><a href="@Url.Action("Index", "Products")"><i class="fa fa-fw fa-briefcase"></i> Products</a></li>
                <li><a href="@Url.Action("Index", "Inventory")"><i class="fa fa-fw fa-dropbox"></i> Inventory</a></li>
                <li><a href="@Url.Action("Index", "Replenishments")"><i class="fa fa-fw fa-stack-overflow"></i> Replenishments</a></li>
                <li><a href="@Url.Action("Index", "Bulk")"><i class="fa fa-fw fa-cubes"></i> Bulk Management</a></li>
                <li><a href="@Url.Action("Index", "Receiving")"><i class="fa fa-fw fa-truck fa-flip-horizontal"></i> Receiving</a></li>
                <li><a href="@Url.Action("Index", "Reports")"><i class="fa fa-fw fa-files-o"></i> Run Reports</a></li>
                <li><a href="@Url.Action("Index", "Documents")"><i class="fa fa-fw fa-eject"></i> File Management</a></li>
                <li><a href="@Url.Action("Index", "Client")"><i class="fa fa-fw fa-book"></i> Client Management</a></li>
                <li><a href="@Url.Action("Index", "ApplicationUsers")"><i class="fa fa-fw fa-user-plus"></i> User Management</a></li>
                <li><a href="@Url.Action("Index", "ApplicationRoles")"><i class="fa fa-fw fa-users"></i> Role Management</a></li>
                <li><a href="@Url.Action("Index", "Elmah")"><i class="fa fa-fw fa-exclamation-circle"></i> System Health Log</a></li>
                @*<li><a href="@Url.Action("Index", "")"><i class="fa fa-fw fa-"></i> </a></li>*@
            }
            else if (User.IsInRole("Manager"))
            {
                <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-fw fa-dashboard"></i> Dashboards</a></li>
                <li><a href="@Url.Action("Index", "Orders")"><i class="fa fa-fw fa-stack-exchange"></i> Orders</a></li>
                <li><a href="@Url.Action("Index", "Invoice")"><i class="fa fa-fw fa-calculator"></i> Invoicing</a></li>
                <li><a href="@Url.Action("Index", "Products")"><i class="fa fa-fw fa-briefcase"></i> Products</a></li>
                <li><a href="@Url.Action("Index", "Inventory")"><i class="fa fa-fw fa-dropbox"></i> Inventory</a></li>
                <li><a href="@Url.Action("Index", "Replenishments")"><i class="fa fa-fw fa-stack-overflow"></i> Replenishments</a></li>
                <li><a href="@Url.Action("Index", "Bulk")"><i class="fa fa-fw fa-cubes"></i> Bulk Management</a></li>
                <li><a href="@Url.Action("Index", "Receiving")"><i class="fa fa-fw fa-truck fa-flip-horizontal"></i> Receiving</a></li>
                <li><a href="@Url.Action("Index", "Reports")"><i class="fa fa-fw fa-files-o"></i> Run Reports</a></li>
                <li><a href="@Url.Action("Index", "Documents")"><i class="fa fa-fw fa-eject"></i> File Management</a></li>
                <li><a href="@Url.Action("Index", "Client")"><i class="fa fa-fw fa-book"></i> Client Management</a></li>
                <li><a href="@Url.Action("Index", "ApplicationUsers")"><i class="fa fa-fw fa-user-plus"></i> User Management</a></li>
                <li><a href="@Url.Action("Index", "ApplicationRoles")"><i class="fa fa-fw fa-users"></i> Role Management</a></li>
            }
            else
            {
                if (User.IsInRole("CSR"))
                {
                    <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-fw fa-dashboard"></i> Dashboards</a></li>
                    <li><a href="@Url.Action("Index", "Orders")"><i class="fa fa-fw fa-stack-exchange"></i> Orders</a></li>
                    <li><a href="@Url.Action("Index", "Reports")"><i class="fa fa-fw fa-files-o"></i> Run Reports</a></li>
                    <li><a href="@Url.Action("Index", "Documents")"><i class="fa fa-fw fa-eject"></i> File Management</a></li>
                }
                else if (User.IsInRole("PRCD"))
                {
                    <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-fw fa-dashboard"></i> Dashboards</a></li>
                    <li><a href="@Url.Action("Index", "Orders")"><i class="fa fa-fw fa-stack-exchange"></i> Orders</a></li>
                    <li><a href="@Url.Action("Index", "Reports")"><i class="fa fa-fw fa-files-o"></i> Run Reports</a></li>
                    <li><a href="@Url.Action("Index", "Documents")"><i class="fa fa-fw fa-eject"></i> File Management</a></li>
                }
                else if (User.IsInRole("LCD"))
                {
                    <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-fw fa-dashboard"></i> Dashboards</a></li>
                    <li><a href="@Url.Action("Index", "Orders")"><i class="fa fa-fw fa-stack-exchange"></i> Orders</a></li>
                    <li><a href="@Url.Action("Index", "Reports")"><i class="fa fa-fw fa-files-o"></i> Run Reports</a></li>
                    <li><a href="@Url.Action("Index", "Documents")"><i class="fa fa-fw fa-eject"></i> File Management</a></li>
                }
                else if (User.IsInRole("ICD"))
                {
                    <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-fw fa-dashboard"></i> Dashboards</a></li>
                    <li><a href="@Url.Action("Index", "Orders")"><i class="fa fa-fw fa-stack-exchange"></i> Orders</a></li>
                    <li><a href="@Url.Action("Index", "Reports")"><i class="fa fa-fw fa-files-o"></i> Run Reports</a></li>
                    <li><a href="@Url.Action("Index", "Documents")"><i class="fa fa-fw fa-eject"></i> File Management</a></li>
                }
                else if (User.IsInRole("Client"))
                {
                    <li><a href="@Url.Action("Index", "Home")"><i class="fa fa-fw fa-dashboard"></i> Dashboards</a></li>
                    <li><a href="@Url.Action("Index", "Orders")"><i class="fa fa-fw fa-stack-exchange"></i> Orders</a></li>
                    <li><a href="@Url.Action("Index", "Reports")"><i class="fa fa-fw fa-files-o"></i> Run Reports</a></li>
                    <li><a href="@Url.Action("Index", "Documents")"><i class="fa fa-fw fa-eject"></i> File Management</a></li>
                }
            }
        }
    }
</ul>


<!--#region Save Logic till GetRolesForUser method is working properly. Currently return empty string  -->

@*
        @{
        var menus = new[]
                    {
                       new { LinkText="Dashboard", ActionName="Index", ControllerName="Home", FaIconName="fa fa-fw fa-dashboard", Roles="All" },
                       new { LinkText="Orders", ActionName="Index", ControllerName="Orders", FaIconName="fa fa-fw fa-file-text-o", Roles="CSR" },
                       new { LinkText="Invoice", ActionName="Index", ControllerName="Invoice", FaIconName="fa fa-fw fa-calculator", Roles="All" },
                       new { LinkText="Products", ActionName="Index", ControllerName="Products", FaIconName="fa fa-fw fa-briefcase", Roles="All" },
                       new { LinkText="Inventory", ActionName="Index", ControllerName="Inventory", FaIconName="fa fa-fw fa-dropbox", Roles="All" },
                       new { LinkText="Replenishments", ActionName="Index", ControllerName="Replenishments", FaIconName="fa fa-fw fa-stack-overflow", Roles="All" },
                       new { LinkText="Bulk", ActionName="Index", ControllerName="Bulk", FaIconName="fa fa-fw fa-cubes", Roles="All" },
                       new { LinkText="Receiving", ActionName="Index", ControllerName="Receiving", FaIconName="fa fa-fw fa-truck fa-flip-horizontal", Roles="All" },
                       new { LinkText="Run Reports", ActionName="Index", ControllerName="Reports", FaIconName="fa fa-fw fa-files-o", Roles="All" },
                       new { LinkText="File Management", ActionName="Index", ControllerName="Documents", FaIconName="fa fa-fw fa-eject", Roles="All" },
                       new { LinkText="Client Management", ActionName="Index", ControllerName="Client", FaIconName="fa fa-fw fa-book", Roles="Admin" },
                       new { LinkText="User Management", ActionName="Index", ControllerName="ApplicationUsers", FaIconName="fa fa-fw fa-user", Roles="Admin" },
                       new { LinkText="Role Management", ActionName="Index", ControllerName="ApplicationRoles", FaIconName="fa fa-fw fa-users", Roles="Admin" },
                       new { LinkText="System Health Log", ActionName="Index", ControllerName="Elmah", FaIconName="fa fa-fw fa-exclamation-circle", Roles="Admin" }
                    };
    }

        @{
        var menus = new[]
                    {
                       new { LinkText="Dashboard", ActionName="Index", ControllerName="Home", FaIconName="fa fa-fw fa-dashboard", Roles="All" },
                       new { LinkText="Orders", ActionName="Index", ControllerName="Orders", FaIconName="fa fa-fw fa-file-text-o", Roles="CSR" },
                       new { LinkText="Invoice", ActionName="Index", ControllerName="Invoice", FaIconName="fa fa-fw fa-calculator", Roles="All" },
                       new { LinkText="Products", ActionName="Index", ControllerName="Products", FaIconName="fa fa-fw fa-briefcase", Roles="All" },
                       new { LinkText="Inventory", ActionName="Index", ControllerName="Inventory", FaIconName="fa fa-fw fa-dropbox", Roles="All" },
                       new { LinkText="Replenishments", ActionName="Index", ControllerName="Replenishments", FaIconName="fa fa-fw fa-stack-overflow", Roles="All" },
                       new { LinkText="Bulk", ActionName="Index", ControllerName="Bulk", FaIconName="fa fa-fw fa-cubes", Roles="All" },
                       new { LinkText="Receiving", ActionName="Index", ControllerName="Receiving", FaIconName="fa fa-fw fa-truck fa-flip-horizontal", Roles="All" },
                       new { LinkText="Run Reports", ActionName="Index", ControllerName="Reports", FaIconName="fa fa-fw fa-files-o", Roles="All" },
                       new { LinkText="File Management", ActionName="Index", ControllerName="Documents", FaIconName="fa fa-fw fa-eject", Roles="All" },
                       new { LinkText="Client Management", ActionName="Index", ControllerName="Client", FaIconName="fa fa-fw fa-book", Roles="All" },
                       new { LinkText="User Management", ActionName="Index", ControllerName="ApplicationUsers", FaIconName="fa fa-fw fa-user", Roles="Admin" },
                       new { LinkText="Role Management", ActionName="Index", ControllerName="ApplicationRoles", FaIconName="fa fa-fw fa-users", Roles="Admin" },
                       new { LinkText="System Health Log", ActionName="Index", ControllerName="Elmah", FaIconName="fa fa-fw fa-exclamation-circle", Roles="Admin" }
                    };
    }

    <ul id="menu" class="nav navbar-nav side-nav">



        @{
                var links = from item in menus
                            where item.Roles.Split(new String[] { "," }, StringSplitOptions.RemoveEmptyEntries)
                            .Any(x => new String[] { "All", "Anonymous", "Admin", "Manager", "CSR" }.Contains(x))
                            select item;

                foreach (var link in links)
                {
                    if (this.User.IsInRole(link.Roles) || link.Roles == "All")
                    {
                        <li><a href="@Url.Action(link.ActionName, link.ControllerName )"><i class="@link.FaIconName"></i> @link.LinkText</a> </li>
                    }
                }
            }

        @{
                    @if (HttpContext.Current.User.Identity.IsAuthenticated)
                    {
                        String[] roles = Roles.GetRolesForUser();
                        var links = from item in menus
                                    where item.Roles.Split(new String[] { "," }, StringSplitOptions.RemoveEmptyEntries)
                                    .Any(x => roles.Contains(x) || x == "All")
                                    select item;
                        foreach (var link in links)
                        {
                            @:
                            <li>@Html.ActionLink(link.LinkText, link.ActionName, link.ControllerName)</li>
                        }
                    }
                    else
                    {
                        var links = from item in menus
                                    where item.Roles.Split(new String[] { "," }, StringSplitOptions.RemoveEmptyEntries)
                                    .Any(x => new String[] { "All", "Anonymous" }.Contains(x))
                                    select item;

                        foreach (var link in links)
                        {
                            @:
                            <li><a href="@Url.Action(link.ActionName, link.ControllerName )"><i class="@link.FaIconName"></i> @link.LinkText</a> </li>
                        }
                    }
            }
    </ul>*@
<!--#endregion -->