@model MvcPhoenix.Models.BulkContainerViewModel

@{
    // View to hold and post a BulkContainerViewModel
    if (Model.bulkid == -1)
    {
        ViewBag.Title = "Receive Bulk Container";
        ViewBag.BulkNew = "New";

        if (Model.isknownmaterial == false)
        {
            ViewBag.Title = "Receive Unknown Bulk Container";
            ViewBag.BulkNew = "New";
        }
    }
    else
    {
        ViewBag.Title = "Edit Bulk Container";
    }
}

<div class="container-fluid">
    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            @if (Model.clientid > 1)
            {
                <img src="~/Client/LogoFile?id=@Model.clientid" style="width: auto; height: 73px; float: right" alt="@Model.clientname logo">
            }
        </div>
        <div class="col-lg-12">
            <h1 class="page-header">
                @ViewBag.Title <small>@ViewBag.BulkNew</small>
            </h1>
        </div>
    </div>
    <div class="form-group row">
        <div class="col-lg-12 ">
            <i class="fa fa-arrow-circle-left"></i> @Html.ActionLink("Back to Receiving Main", "Index", "Receiving")
            <span class="pull-right label label-info">Bulk Id: @Model.bulkid.ToString()</span>
        </div>
    </div>
    <!-- /.Page Heading -->
    @using (Html.BeginForm("SaveContainer", "Receiving"))
    {
        @Html.HiddenFor(m => m.isknownmaterial)
        @Html.HiddenFor(m => m.bulkid)
        @Html.HiddenFor(m => m.productmasterid)
        @Html.HiddenFor(m => m.bulkstatus)

        if (@Model.isknownmaterial == true)
        {
            <div class="panel panel-primary">
                <div class="panel-body collapse in">
                    <div class="table-responsive">
                        <table class="table table-hover table-striped">
                            <tr>
                                <th colspan="6">Receiving Notes - Alert</th>
                            </tr>
                            <tr>
                                <td colspan="6">
                                    @if (@Model.pm_alertnotesreceiving == null || @Model.pm_alertnotesreceiving.Length <= 1)
                                    {
                                    <p>No receiving alert for this product</p>
                                    }
                                    else
                                    {
                                    <marquee><h4>@Model.pm_alertnotesreceiving</h4></marquee>
                                    }
                                </td>
                            </tr>
                            <tr>
                                <th>Master Code</th>
                                <th colspan="4" width="64%">Master Name</th>
                                <th width="16%">Current Weight on Hand</th>
                            </tr>
                            <tr>
                                <td>@Model.MasterCode</td>
                                <td colspan="4">@Model.MasterName</td>
                                <td>@Model.pm_sumofcurrentweight.ToString()</td>
                            </tr>
                        </table>
                        <table class="table table-hover table-striped">
                            <tr>
                                <th>Refrigerate</th>
                                <th width="16%">Flammable Room</th>
                                <th width="16%">Freezer Storage</th>
                                <th width="16%">Temp. Controlled Storage</th>
                                <th width="16%">Clean Room GMP</th>
                                <th width="16%">Bulk Status</th>
                            </tr>
                            <tr>
                                <td>@Model.pm_refrigerate</td>
                                <td>@Model.pm_flammablestorageroom</td>
                                <td>@Model.pm_freezerstorage</td>
                                <td>@Model.pm_tempraturecontrolledstorage</td>
                                <td>@Model.pm_cleanroomgmp</td>
                                <td>@Model.bulkstatus</td>
                            </tr>
                            <tr>
                                <th colspan="3">Other Handling Instructions</th>
                                <th>Other Storage</th>
                                <th>Restricted to Amount</th>
                                <th>Shelf Life</th>
                            </tr>
                            <tr>
                                <td colspan="3">@Model.pm_OtherHandlingInstr &nbsp;</td>
                                <td>@Model.pm_otherstorage</td>
                                <td>@Model.pm_restrictedtoamount</td>
                                <td>@Model.pm_shelflife</td>
                            </tr>
                        </table>
                        <table class="table table-hover table-striped">
                            <tr>
                                <th>UN Number</th>
                                <th width="16%">Packing Group</th>
                                <th width="16%">Hazard Class</th>
                                <th width="16%">Hazard Sub-Class</th>
                                <th width="16%">EPA Biocide</th>
                            </tr>
                            <tr>
                                <td>@Model.pd_groundunnum</td>
                                <td>@Model.pd_groundpackinggrp</td>
                                <td>@Model.pd_groundhazardclass</td>
                                <td>@Model.pd_groundhazardsubclass</td>
                                <td>@Model.pd_epabiocide</td>
                            </tr>
                        </table>
                        <table class="table table-hover table-striped">
                            <tr>
                                <th>Signal Word</th>
                                <th width="16%">Symbol 1</th>
                                <th width="16%">Symbol 2</th>
                                <th width="16%">Symbol 3</th>
                                <th width="16%">Symbol 4</th>
                                <th width="16%">Symbol 5</th>
                            </tr>
                            <tr>
                                <td>@Model.ghs_signalword</td>
                                <td>@Model.ghs_symbol1</td>
                                <td>@Model.ghs_symbol2</td>
                                <td>@Model.ghs_symbol3</td>
                                <td>@Model.ghs_symbol4</td>
                                <td>@Model.ghs_symbol5</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
        }
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#prodinfopan"><i class="fa fa-file-text-o fa-fw"></i> Product Batch / Lot Information</h3>
            </div>
            <div id="prodinfopan" class="panel-body collapse in">
                @if (Model.isknownmaterial == false)
                {
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label>Received as Code</label>
                            @Html.TextBoxFor(m => m.receivedascode, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.receivedascode)
                        </div>
                        <div class="form-group col-md-6">
                            <label>Received as Name</label>
                            @Html.TextBoxFor(m => m.receivedasname, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.receivedasname)
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="form-group col-md-6">
                        <label>Client</label>
                        @Html.TextBoxFor(m => m.clientname, new { @class = "form-control", @readonly = "readonly" })
                        @Html.ValidationMessageFor(m => m.clientname)
                    </div>
                    <div class="form-group col-md-2">
                        <label>Warehouse</label>
                        @Html.DropDownListFor(m => m.warehouse, Model.ListOfWareHouses, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.warehouse)
                    </div>
                    <div class="form-group col-md-2">
                        <label>Carrier</label>
                        @Html.DropDownListFor(m => m.carrier, Model.ListOfCarriers, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.carrier)
                    </div>
                    <div class="form-group col-md-2">
                        <label>Docs Included</label>
                        <ul class="list-unstyled">
                            <li>
                                COA @Html.CheckBox("coaincluded", Model.coaincluded != null && (bool)Model.coaincluded, new { @title = "COA Included" }) &nbsp;
                                MSDS @Html.CheckBox("msdsincluded", Model.msdsincluded != null && (bool)Model.msdsincluded, new { @title = "MSDS Included" })
                            </li>
                        </ul>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label>Lot Number</label>
                        @Html.TextBoxFor(m => m.lotnumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.lotnumber)
                    </div>
                    <div class="form-group col-md-2">
                        <label>Date Received</label>
                        @Html.TextBoxFor(m => m.receivedate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                        @Html.ValidationMessageFor(m => m.receivedate)
                    </div>
                    <div class="form-group col-md-2">
                        <label>Receive Weight</label>
                        @Html.TextBoxFor(m => m.receiveweight, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.receiveweight)
                    </div>
                    <div class="col-md-2">
                        <label>Manufacture Date</label>
                        @Html.TextBoxFor(m => m.mfgdate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                        @Html.ValidationMessageFor(m => m.mfgdate)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <label>Entered By</label>
                        @Html.TextBoxFor(m => m.enteredby, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.enteredby)
                    </div>
                    <div class="form-group col-md-3">
                        <label>Received By</label>
                        @Html.TextBoxFor(m => m.receivedby, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.receivedby)
                    </div>
                    <div class="col-md-2">
                        <label>Expiration Date</label>
                        @Html.TextBoxFor(m => m.expirationdate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control", @onchange = "ChangeCeaseShipDate(this.value);" })
                        @Html.ValidationMessageFor(m => m.expirationdate)
                    </div>
                    <div class="col-md-2">
                        <label>Cease Ship Date</label>
                        @Html.TextBoxFor(m => m.ceaseshipdate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                        @Html.ValidationMessageFor(m => m.ceaseshipdate)
                    </div>
                    <div class="col-md-2">
                        <label>QC Date</label>
                        @Html.TextBoxFor(m => m.qcdate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                        @Html.ValidationMessageFor(m => m.qcdate)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#containerinfopan"><i class="fa fa-file-text-o fa-fw"></i> Container Information</h3>
            </div>
            <div id="containerinfopan" class="panel-body collapse in">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-6">
                                <label>Container Note</label>
                                @Html.TextAreaFor(m => m.containernotes, new { @class = "form-control", @rows = 5 })
                                @Html.ValidationMessageFor(m => m.containernotes)
                            </div>
                            <div class="col-md-6">
                                <label>Bulk Label Note</label>
                                @Html.TextAreaFor(m => m.bulklabelnote, new { @class = "form-control", @rows = 5 })
                                @Html.ValidationMessageFor(m => m.bulklabelnote)
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label>Bin</label>
                                @Html.TextBoxFor(m => m.bin, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.bin)
                            </div>
                            <div class="form-group col-md-6">
                                <label>Container Color</label>
                                @Html.TextBoxFor(m => m.containercolor, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.containercolor)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <label>Container Type</label>
                                @Html.DropDownListFor(m => m.containertype, Model.ListOfContainerTypeIDs, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.containertype)
                            </div>
                            <div class="col-md-6">
                                <label>Unit Measure</label>
                                @if (Model.isknownmaterial == true)
                                {
                                    @Html.DropDownListFor(m => m.um, Model.ListOfUMs, new { @class = "form-control" })
                                }
                                else
                                {
                                    @Html.TextBoxFor(m => m.um, new { @class = "form-control" })
                                }
                                @Html.ValidationMessageFor(m => m.um)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                <input id="btnSave" type="submit" value="Save Changes" class="btn btn-success btn-block" />
            </div>
            <div class="form-group col-md-6">
                <input type="button" class="btn btn-danger btn-block" onclick="location.href = 'javascript:history.back()';" value="Cancel" />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <i class="fa fa-arrow-circle-up"></i> <a href="#top">Back to Top</a>
                <span class="pull-right"><a href="#top">Back to Top</a> <i class="fa fa-arrow-circle-up"></i></span>
            </div>
        </div>
        <div>
            <span id="dvSaveResult"></span>
        </div>
    }
</div>

<script type="text/javascript">
    $(document).ready(function () {
        if ('@Model.pm_alertnotesreceiving'.length > 1) {
            $.alert('@Model.pm_alertnotesreceiving', "Receiving Notes Alert")
        }
    });

    function ChangeCeaseShipDate(date) {
        var ceaseshipdiff = '@Model.pm_ceaseshipdifferential';
        var expirationdate = date;
        var ceasedate = addDays(expirationdate, ceaseshipdiff);
        $('#ceaseshipdate').val($.datepicker.formatDate('dd-M-yy', ceasedate));
    }

    function addDays(date, days) {
        var result = new Date(date);
        result.setDate(result.getDate() - days);
        return result;
    }
</script>