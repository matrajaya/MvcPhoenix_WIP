@model MvcPhoenix.Models.BulkContainer
@{
    ViewBag.Title = "Receiving";
}

<div class="container-fluid">

    <!-- Page Heading -->
    <div class="row">
        <div class="col-lg-12">
            <img src="~/Content/images/logos/oltlogo.jpg" style="width: auto; height: 73px; float: right" alt="acme logo">
        </div>
        <div class="col-lg-12">
            <h1 class="page-header">
                @ViewBag.Title <small>Known Bulk Material</small>
            </h1>
        </div>
    </div>
    <div class="form-group">
        <div class="col-lg-12 row">
            <i class="fa fa-arrow-circle-left"></i> @Html.ActionLink("Back to Receiving Main", "Index")
        </div>
    </div>
    <!-- /.Page Heading -->
    @using (Ajax.BeginForm("SavePostData", "Receiving", null,
    new AjaxOptions
    {
        HttpMethod = "POST",
        UpdateTargetId = "dvSaveResult",
        InsertionMode = InsertionMode.Replace,
        OnSuccess = "OnSaveSuccess"
    }))
    {
        <div class="row">
            <div class="col-md-12">
                <div class="panel panel-primary">
                    <div class="panel-heading">
                        <h3 class="panel-title"><i class="fa fa-file-text-o fa-fw"></i></h3>
                    </div>
                    <div class="panel-body">
                        <div class="row">
                            <div class="form-group col-md-4">
                                <label>Client</label>
                                @Html.DropDownList("clientid", fnListOfClientIDs(), new { onchange = "clientid_onchange()", @class = "form-control" })
                            </div>
                            <div class="form-group col-md-4">
                                <div id="dvProductMasterDD"></div>
                            </div>
                            <div class="form-group col-md-4">
                                <label class="invisible">.</label>
                                <input id="btnAdd" name="btnAdd" type="button" onclick="btnAdd_click()" value="Enter New Container" class="btn btn-success form-control hidden" />
                            </div>
                        </div>
                        <div class="row">
                            <label id="dvGridPlaceHolder"></label>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    <!-- div placeholder for detail fields (initially hidden) -->
        <div id="dvDetail" class="hidden">

            <!-- do not remove ( must be inside form tag )-->
            @Html.HiddenFor(m => m.isknownmaterial)
            @Html.HiddenFor(m => m.bulkid)

            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title" data-toggle="collapse" data-target="#prodinfopan"><i class="fa fa-file-text-o fa-fw"></i> Product Information</h3>
                </div>
                <div id="prodinfopan" class="panel-body collapse in">
                    <div class="row">
                        <div class="form-group col-md-3">
                            <label>Date Received</label>
                            @Html.TextBoxFor(m => m.receivedate, "{0:dd-MMM-yyyy}", new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.receivedate)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Client</label>
                            @Html.TextBoxFor(m => m.clientname, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(m => m.clientname)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Carrier - DDL*</label>
                            @Html.TextBoxFor(m => m.carrier, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.carrier)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Warehouse</label>
                            @Html.DropDownListFor(m => m.warehouse, Model.ListOfWareHouses, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.warehouse)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Current Weight</label>
                            @Html.TextBoxFor(m => m.currentweight, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.currentweight)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Receive Weight</label>
                            @Html.TextBoxFor(m => m.receiveweight, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.receiveweight)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Entered By</label>
                            @Html.TextBoxFor(m => m.enteredby, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.enteredby)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Received By</label>
                            @Html.TextBoxFor(m => m.receivedby, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.receivedby)
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title" data-toggle="collapse" data-target="#batchlotpan"><i class="fa fa-file-text-o fa-fw"></i> Batch / Lot Information</h3>
                </div>
                <div id="batchlotpan" class="panel-body collapse in">
                    <div class="row">
                        <div class="form-group col-md-3">
                            <label>Lot Number</label>
                            @Html.TextBoxFor(m => m.lotnumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.lotnumber)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Date Of Manufacture</label>
                            @Html.TextBoxFor(m => m.mfgdate, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.mfgdate)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Expiration Date</label>
                            @Html.TextBoxFor(m => m.expirationdate, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.expirationdate)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Shelf Life *</label>
                            <input class="form-control" readonly ="readonly" />
                        </div>
                        <div class="form-group col-md-3">
                            <label>Cease Ship Date</label>
                            @Html.TextBoxFor(m => m.ceaseshipdate, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.ceaseshipdate)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Bulk Status</label>
                            @Html.DropDownListFor(m => m.bulkstatus, Model.ListOfBulkStatusIDs, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.bulkstatus)
                        </div>
                        <div class="form-group col-md-3">
                            <label>QC Date</label>
                            @Html.TextBoxFor(m => m.qcdate, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.qcdate)
                        </div>
                        <div class="clearfix"></div>
                    </div>
                </div>
            </div>

            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title" data-toggle="collapse" data-target="#containerinfopan"><i class="fa fa-file-text-o fa-fw"></i> Container Information</h3>
                </div>
                <div id="containerinfopan" class="panel-body collapse in">
                    <div class="row">
                        <div class="form-group col-md-12">
                            <label>Container Note</label>
                            @Html.TextAreaFor(m => m.containernotes, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.containernotes)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Container Color</label>
                            @Html.TextBoxFor(m => m.containercolor, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.containercolor)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Bin</label>
                            @Html.TextBoxFor(m => m.bin, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.bin)
                        </div>
                        <div class="form-group col-md-3">
                            <label>Location *</label>
                            <input class="form-control" />
                        </div>
                        <div class="form-group col-md-3">
                            <label>Container Type</label>
                            @Html.DropDownListFor(m => m.containertype, Model.ListOfContainerTypeIDs, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.containertype)
                        </div>
                    </div>
                </div>
            </div>

            <div class="panel panel-primary">
                <div class="panel-heading">
                    <h3 class="panel-title" data-toggle="collapse" data-target="#otherinfopan"><i class="fa fa-file-text-o fa-fw"></i> Other Information</h3>
                </div>
                <div id="otherinfopan" class="panel-body collapse in">
                    <div class="row">
                        <div class="form-group col-md-3">
                            <label>Flammable *</label>
                            <input type="checkbox" class="checkbox" readonly="readonly" disabled />
                        </div>
                        <div class="form-group col-md-3">
                            <label>Freezer *</label>
                            <input type="checkbox" class="checkbox" readonly="readonly" disabled />
                        </div>
                        <div class="form-group col-md-3">
                            <label>Refrigerated *</label>
                            <input type="checkbox" class="checkbox" readonly="readonly" disabled />
                        </div>
                        <div class="form-group col-md-3">
                            <label>Other Storage *</label>
                            <input type="checkbox" class="checkbox" readonly="readonly" disabled />
                        </div>
                        <div class="form-group col-md-3">
                            <label>Packout On Receipt</label>
                            @Html.CheckBox("packout", Model.packout != null && (bool)Model.packout, new { @class = "checkbox" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>Restricted Quantity *</label>
                            <input type="checkbox" class="checkbox" readonly="readonly" disabled />
                        </div>
                        <div class="form-group col-md-3">
                            <label>Restricted Amount *</label>
                            <input class="form-control" readonly="readonly" disabled />
                        </div>
                        <div class="form-group col-md-3">
                            <label>Unit Of Measure</label>
                            @Html.TextBoxFor(m => m.um, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.um)
                        </div>
                        <div class="form-group col-md-3">
                            <label>COA Included?</label>
                            @Html.CheckBox("coaincluded", Model.coaincluded != null && (bool)Model.coaincluded, new { @class = "checkbox" })
                        </div>
                        <div class="form-group col-md-3">
                            <label>MSDS Included?</label>
                            @Html.CheckBox("msdsincluded", Model.msdsincluded != null && (bool)Model.msdsincluded, new { @class = "checkbox" })
                        </div>
                        <div class="form-group col-md-6">
                            <label>Bulk Label Note</label>
                            @Html.TextBoxFor(m => m.bulklabelnote, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.bulklabelnote)
                        </div>
                    </div>
                </div>
            </div>

            @*<input id="btnSave" type="submit" value="Save New Container Details" class="btn btn-success" />*@

            <div class="form-group row">
                <div class=" col-md-6">
                    <input id="btnSave" type="submit" value="Save Entry" class="btn btn-success btn-block" />
                </div>
                <div class=" col-md-6">
                    <input type="button" value="Cancel Entry" class="btn btn-danger btn-block" onclick="alert('Clear Form, Clear form and go back to Index')" />
                </div>
                <div class="clearfix"></div>
                <br />
                <div class="col-lg-12">
                    <i class="fa fa-arrow-circle-up"></i> <a href="#top">Back to Top</a>
                    <span class="pull-right"><a href="#top">Back to Top</a> <i class="fa fa-arrow-circle-up"></i></span>
                </div>
            </div>

            <div style="font-weight:bold">
                <span id="dvSaveResult"></span>
            </div>

        </div>
    }

    <!-- modal success dialog -->
    <div id="mymodalsuccess" role="dialog" class="modal fade">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-body">
                    <div class="text-center">
                        <br /><br /><br />
                        <h3>New Container Created</h3>
                        <br /><br /><br />
                        <button type="button" class="btn btn-success" data-dismiss="modal">Close</button>
                        <br /><br />
                    </div>
                </div>
            </div>
        </div>
    </div>

</div>

<!-- Javascript -->

@section Scripts {
    <script>
        $(function () {
            $("form input").tooltipValidation({
                placement: "top"
            });
            $("form select").tooltipValidation({
                placement: "top"
            });
        });
    </script>

    <script type="text/javascript">
        $(function () {
            $('.datepicker').datepicker();
        });
    </script>

    <script type="text/javascript">

        function clientid_onchange() {
            // reset controls
            $("#dvGridPlaceHolder").empty();
            $("#btnAdd").addClass("hidden");
            $("#dvDetail").addClass("hidden");

            // fill product DD
            $.ajax({
                url: '@Url.Action("fnProductMasterDD", "Receiving")',
                type: 'GET',
                dataType: 'html',
                cache: false,
                data: { clientid: $('#clientid').val(), change: "productmasterid_onchange" },
                error: function () { generalerror() },
                success: function (datafromcontroller) { $("#dvProductMasterDD").html(datafromcontroller); }
            });
        }

        function productmasterid_onchange() {
            // put partial in div (easier way?)
            $.get('@Url.Action("fnFillBulkOpenOrderItems", "Receiving")',
                { id: $('#productmasterid').val() }, function (datafromcontroller)
                { $("#dvGridPlaceHolder").html(datafromcontroller); });

            // reset controls
            $("#btnAdd").removeClass("hidden");
            $("#dvDetail").addClass("hidden");
        }

        function btnAdd_click() {
            // reset controls
            $("#dvGridPlaceHolder").addClass("hidden");
            $("#btnAdd").addClass("hidden");
            $("#dvDetail").removeClass("hidden");
        }

        function OnSaveSuccess() {
            // disable controls to avoid confusion
            $('#clientid').prop('disabled', true);
            $('#productmasterid').prop('disabled', true);

            // hide submit stuff to avoid double post
            $('#btnSave').prop('disabled', true);
            //alert("New Container Has Been Created");
            $("#mymodalsuccess").modal('show');
        }

        function generalerror() {
            alert("An error occurred while accessing the server");
        }
    </script>

}

<!-- razor functions -->
@functions
{
    private static List<SelectListItem> fnListOfClientIDs()
    {
        MvcPhoenix.EF.CMCSQL03Entities db = new MvcPhoenix.EF.CMCSQL03Entities();
        List<SelectListItem> mylist = new List<SelectListItem>();
        mylist = (from t in db.tblClient
                  orderby t.ClientName
                  select
                      new SelectListItem { Value = t.ClientID.ToString(), Text = t.ClientName }).ToList();
        mylist.Insert(0, new SelectListItem { Value = "0", Text = "Select Client" });
        db.Dispose();
        return mylist;
    }
}