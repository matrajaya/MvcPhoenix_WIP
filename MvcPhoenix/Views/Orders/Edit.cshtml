@model MvcPhoenix.Models.OrderMasterFull
@{
    ViewBag.Title = "Edit Order";

    if (@Model.OrderID == -1) { ViewBag.Title = "Create Order"; }
}

<div class="container-fluid">
    <div class="row">
        <div class="col-lg-12">
            <img src="~/Client/LogoFile?id=@Model.ClientId" style="width: auto; height: 73px; float: right" alt="@Model.ClientName logo">
        </div>
        <div class="col-lg-12">
            <h1 class="page-header">
                @ViewBag.Title <small>
                    @if (@Model.OrderID != -1)
                    {@Model.OrderID} for @Model.ClientName
                </small>
            </h1>
        </div>
    </div>

    <div class="form-group row">
        <div class="col-md-12">
            <i class="fa fa-arrow-circle-left"></i> @Html.ActionLink("Back to Orders", "Index")
            <span class="pull-right label label-info">Order ID: @Model.OrderID</span>
            @if (@Model.WebOrderId > 1)
            {
                <span class="pull-right label label-warning" style="padding-right:5px;margin-right:5px;">Web Order ID: @Model.WebOrderId</span>
            }
        </div>
        <div class="col-md-12">
            <div class="pull-left">
                <a href="#_" type="button" onclick="$('.panel-body').collapse('show');" value="open all"> Open All</a> |
                <a href="#__" type="button" onclick="$('.panel-body').collapse('hide');" value="close all"> Close All</a>
            </div>
            <div style="text-align:center;">
                <span id="dvTopMessage" style="color:green;font-weight:bold;"> @TempData["SaveResult"]</span><!-- show message after save -->
                <div class="pull-right">
                    @if (@Model.OrderID != -1)
                    {
                        <a href="@Url.Action("PrintPickPack", "Orders", new { id = @Model.OrderID })" target="_blank" class="btn btn-xs btn-success"><i class="fa fa-file-pdf-o"></i> Print Pick &amp; Pack Docs</a>
                    }
                </div>
            </div>
        </div>
    </div>

    <div class="well col-lg-12">
        <div class="row">
            <div class="col-md-3"><b>Created On</b></div>
            <div class="col-md-3"><b>Created By</b></div>
            <div class="col-md-3"><b>Updated On</b></div>
            <div class="col-md-3"><b>Updated By</b></div>
        </div>
        <div class="row">
            <div class="col-md-3">@String.Format("{0:dd MMM yyyy}", @Model.CreateDate)</div>
            <div class="col-md-3">@Model.CreateUser</div>
            <div class="col-md-3">@String.Format("{0:dd MMM yyyy}", @Model.UpdateDate)</div>
            <div class="col-md-3">@Model.UpdateUser</div>
        </div>
    </div>

    @if (Model.IsSDN == true)
    {
        <h3 class="alert alert-danger text-center">
            <b>WARNING - This order appears to be on the Do Not Ship List</b>
        </h3>
    }

    @using (Html.BeginForm("Save", "Orders", FormMethod.Post))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(m => m.OrderID)
        @Html.HiddenFor(m => m.WebOrderId)
        @Html.HiddenFor(m => m.ClientId)
        @Html.HiddenFor(m => m.Customer)
        @Html.HiddenFor(m => m.OrderDate)
        @Html.HiddenFor(m => m.CreateUser)
        @Html.HiddenFor(m => m.CreateDate)
        @Html.HiddenFor(m => m.UpdateUser)
        @Html.HiddenFor(m => m.UpdateDate)

        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#clientpan"><i class="fa fa-file-text-o fa-fw"></i> Client Order Information</h3>
            </div>
            <div id="clientpan" class="panel-body collapse in">
                <div class="row">
                    <div class="col-md-6 form-group">
                        <label class="control-label">Name</label>
                        @Html.TextBoxFor(m => m.ClientName, new { @class = "form-control", disabled = "true" })
                        @Html.ValidationMessageFor(m => m.ClientName)
                    </div>
                    <div class="col-md-6 form-group">
                        <label>Division / Business Unit <i class="fa fa-fw fa-question-circle" title="Division / Business Unit"></i></label>
                        @Html.DropDownListFor(m => m.DivisionId, ApplicationService.ddlDivisionIDs(Model.ClientId), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.DivisionId)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <label class="control-label">Client Reference</label>
                        @Html.TextBoxFor(m => m.ClientRefNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ClientRefNumber)
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">Client Order Number</label>
                        @Html.TextBoxFor(m => m.ClientOrderNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.ClientOrderNumber)
                    </div>
                    <div class="col-md-2">
                        <label><abbr title="S = Samples&#13;D = Dormant&#13;R = Returns&#13;C = Commercial&#13;X = R&D/Transfer&#13;">Order Type <i class="fa fa-fw fa-question-circle" rel="tooltip"></i></abbr></label>
                        @Html.DropDownListFor(m => m.OrderType, new SelectList(Enum.GetValues(typeof(ApplicationService.OrderTypeChoice))), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.OrderType)
                    </div>
                    <div class="col-md-2">
                        <label class="control-label">Order Source</label>
                        @Html.DropDownListFor(m => m.Source, new SelectList(Enum.GetValues(typeof(ApplicationService.OrderSourceChoice))), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Source)
                    </div>
                    <div class="col-md-2">
                        <label class="control-label">Client Source/Type</label>
                        @Html.TextBoxFor(m => m.ClientOrderType, new { @class = "form-control", @disabled = "disabled" })
                        @Html.ValidationMessageFor(m => m.ClientOrderType)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#shiptopan"><i class="fa fa-file-text-o fa-fw"></i> Ship To Details</h3>
            </div>
            <div id="shiptopan" class="panel-body collapse in">
                @if (Model.IsSDN == true || Model.IsSDNOverride == true)
                {
                    <div class="row">
                        <div class="col-md-3 pull-right text-right">
                            @Html.CheckBox("IsSDNOverride", Model.IsSDNOverride != null && (bool)Model.IsSDNOverride)
                            <label>Override "Do Not Ship"</label>
                        </div>
                    </div>
                }                
                <div class="row">
                    <div class="form-group col-md-6">
                        <label class="control-label">Name</label>
                        @Html.TextBoxFor(m => m.Company, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Company)
                    </div>
                    <div class="form-group col-md-6">
                        <label class="control-label">Attention</label>
                        @Html.TextBoxFor(m => m.Attention, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Attention)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label class="control-label">Email</label>
                        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Email)
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">Phone</label>
                        @Html.TextBoxFor(m => m.Phone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Phone)
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">Fax</label>
                        @Html.TextBoxFor(m => m.Fax, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Fax)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label class="control-label">Address 1</label>
                        @Html.TextBoxFor(m => m.Street, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Street)
                    </div>
                    <div class="form-group col-md-4">
                        <label class="control-label">Address 2</label>
                        @Html.TextBoxFor(m => m.Street2, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Street2)
                    </div>
                    <div class="form-group col-md-2">
                        <label class="control-label">Address 3</label>
                        @Html.TextBoxFor(m => m.Street3, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Street3)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-3">
                        <label class="control-label">City</label>
                        @Html.TextBoxFor(m => m.City, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.City)
                    </div>
                    <div class="form-group col-md-2">
                        <label class="control-label">Zip</label>
                        @Html.TextBoxFor(m => m.Zip, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Zip)
                    </div>
                    <div class="col-md-2">
                        <label class="control-label">State</label>
                        @Html.TextBoxFor(m => m.State, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.State)
                    </div>
                    <div class="col-md-5">
                        <label class="control-label">Country</label>
                        @Html.DropDownListFor(m => m.Country, ApplicationService.ddlCountries(), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Country)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <label>Customs Reference Number</label>
                        @Html.TextBoxFor(m => m.CustomsRefNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.CustomsRefNumber)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#requestorpan"><i class="fa fa-file-text-o fa-fw"></i> Requestor's Details</h3>
            </div>
            <div id="requestorpan" class="panel-body collapse in">
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label">Use Contacts Directory</label>
                        @Html.DropDownList("reqID", ApplicationService.ddlRequestors(Model.ClientId), new { @class = "form-control", @onchange = "PullRequestor($(this).val());" })
                    </div>
                    <div class="form-group col-md-8">
                        <label class="control-label">Requestor's Name</label>
                        @Html.TextBoxFor(m => m.RequestorName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.RequestorName)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label class="control-label">Requestor's Email</label>
                        @Html.TextBoxFor(m => m.RequestorEmail, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.RequestorEmail)
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">Requestor's Phone</label>
                        @Html.TextBoxFor(m => m.RequestorPhone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.RequestorPhone)
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">Requestor's Fax</label>
                        @Html.TextBoxFor(m => m.RequestorFax, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.RequestorFax)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-4">
                        <label class="control-label">Use Contacts Directory</label>
                        @Html.DropDownList("salesrepID", ApplicationService.ddlSalesReps(Model.ClientId), new { @class = "form-control", @onchange = "PullSalesRep($(this).val());" })
                    </div>
                    <div class="form-group col-md-8">
                        <label class="control-label">Sales Rep's Name</label>
                        @Html.TextBoxFor(m => m.SalesRepName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SalesRepName)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label class="control-label">Sales Rep's Email</label>
                        @Html.TextBoxFor(m => m.SalesRepEmail, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SalesRepEmail)
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">Sales Rep's Phone</label>
                        @Html.TextBoxFor(m => m.SalesRepPhone, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SalesRepPhone)
                    </div>
                    <div class="form-group col-md-3">
                        <label class="control-label">Sales Rep's Territory</label>
                        @Html.TextBoxFor(m => m.SalesRepTerritory, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.SalesRepTerritory)
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-md-6">
                        <label class="control-label">Marketing Rep's Name</label>
                        @Html.TextBoxFor(m => m.MarketingRep, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.MarketingRep)
                    </div>
                    <div class="form-group col-md-6">
                        <label class="control-label">Marketing Rep's Email</label>
                        @Html.TextBoxFor(m => m.MarketingRepEmail, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.MarketingRepEmail)
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-3">
                        <label class="control-label">Distributor</label>
                        @Html.TextBoxFor(m => m.Distributor, new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.Distributor)
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">End Use</label>
                        @Html.DropDownListFor(m => m.EndUse, ApplicationService.ddlEndUses(Model.ClientId), new { @class = "form-control" })
                        @Html.ValidationMessageFor(m => m.EndUse)
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">Approval Needed</label>
                        @Html.CheckBoxFor(m => m.ApprovalNeeded, new { @class = "checkbox" })
                    </div>
                    <div class="col-md-3">
                        <label class="control-label">Approval Date</label>
                        @Html.TextBoxFor(m => m.ApprovalDate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                        @Html.ValidationMessageFor(m => m.ApprovalDate)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#prodselectpan"><i class="fa fa-file-text-o fa-fw"></i> Order Items</h3>
            </div>
            <div id="prodselectpan" class="panel-body collapse in">
                <span id="dvAllocateResult" class="pull-right text-success"></span>
                <div id="dvItems">
                    @if (Model.OrderID == -1)
                    {
                        <h5 class="alert alert-danger">Please save the order once before adding items</h5>
                    }
                    @if (Model.OrderID > 1)
                    {
                        <div class="row">
                            <div class="col-md-4 form-group">
                                @Ajax.ActionLink("Add Order Item", "CreateItem", "Orders", new { id = Model.OrderID }, new AjaxOptions
                                {
                                    UpdateTargetId = "dialogPlaceholder",
                                    InsertionMode = InsertionMode.Replace,
                                    HttpMethod = "GET",
                                    OnSuccess = "$('#dialogPlaceholderModal').modal('show');"
                                }, new { @class = "btn btn-primary btn-block" })
                            </div>
                        </div>

                        <div id="dvOrderItemsList">
                            @Html.Action("OrderItemsList", "Orders", new { orderid = Model.OrderID })
                        </div>
                    }
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#translogpan"><i class="fa fa-file-text-o fa-fw"></i> Transaction Charges &amp; Log Notes</h3>
            </div>
            <div id="translogpan" class="panel-body collapse in">
                <div id="z_pc_dvOrderTrans">
                    @if (Model.OrderID == -1)
                    {
                        <h5 class="alert alert-danger">Please save the order once before adding charges and notes</h5>
                    }
                    @if (Model.OrderID > 1)
                    {
                        <div class="row">
                            <div class="col-md-4 form-group">
                                @Ajax.ActionLink("Add Order Transaction", "CreateTrans", "Orders", new { id = Model.OrderID }, new AjaxOptions
                            {
                                UpdateTargetId = "dialogPlaceholder",
                                InsertionMode = InsertionMode.Replace,
                                HttpMethod = "GET",
                                OnSuccess = "$('#dialogPlaceholderModal').modal('show');"
                            }, new { @class = "btn btn-primary btn-block" })
                            </div>
                        </div>
                    }
                </div>
                <div class="clearfix"></div>
                <div id="dvOrderTransList">
                    @if (@Model.TransCount > 0)
                    {
                        @Html.Action("OrderTransList", "Orders", new { orderid = Model.OrderID })
                    }
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#shipmentspan"><i class="fa fa-file-text-o fa-fw"></i> Shipments</h3>
            </div>
            <div id="shipmentspan" class="panel-body collapse in">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-md-4 form-group">
                                <label class="control-label">Carrier/Ship Via</label>
                                @Html.DropDownListFor(m => m.ShipVia, ApplicationService.ddlShipVias(), new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ShipVia)
                            </div>
                            <div class="col-md-8 form-group">
                                <label class="control-label">Shipping Account</label>
                                @Html.TextBoxFor(m => m.ShipAcct, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.ShipAcct)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                <label class="control-label">Timing</label>
                                @Html.TextBoxFor(m => m.Timing, new { @class = "form-control" })
                                @Html.ValidationMessageFor(m => m.Timing)
                            </div>
                            <div class="col-md-8 form-group">
                                <label class="control-label">&nbsp;</label>
                                @Ajax.ActionLink("SPS Billing Details", "EditSPSBilling", "Orders", new { id = @Model.OrderID }, new AjaxOptions
                                {
                                    UpdateTargetId = "dialogPlaceholder",
                                    InsertionMode = InsertionMode.Replace,
                                    HttpMethod = "GET",
                                    OnSuccess = "$('#dialogPlaceholderModal').modal('show');"
                                }, new { @class = "btn btn-primary btn-block" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <label class="control-label">Tracking Number</label>
                        @Html.TextAreaFor(m => m.Tracking, new { @class = "form-control", @rows = 5 })
                        @Html.ValidationMessageFor(m => m.Tracking)
                    </div>
                </div>
            </div>
        </div>
        <div class="panel panel-primary">
            <div class="panel-heading">
                <h3 class="panel-title" data-toggle="collapse" data-target="#specialinstrpan"><i class="fa fa-file-text-o fa-fw"></i> Special Instructions</h3>
            </div>
            <div id="specialinstrpan" class="panel-body collapse in">
                <div class="row">
                    <div class="col-md-6">
                        <label>Special Instructions - Internal</label>
                        @Html.TextAreaFor(m => m.SpecialInternal, new { @class = "form-control", @rows = 5 })
                        @Html.ValidationMessageFor(m => m.SpecialInternal)
                    </div>
                    <div class="col-md-6">
                        <label>Special Instructions - External</label>
                        @Html.TextAreaFor(m => m.Special, new { @class = "form-control", @rows = 5 })
                        @Html.ValidationMessageFor(m => m.Special)
                    </div>
                </div>
            </div>
        </div>

        <div class="form-group row">
            <div class=" col-md-12">
                <input type="submit" value="Save Order" class="btn btn-success btn-block" />
            </div>
            <div class="clearfix"></div>
            <br />
            <div class="col-lg-12">
                <i class="fa fa-arrow-circle-left"></i> @Html.ActionLink("Back to Orders", "Index")
                <span class="pull-right"><a href="#top">Back to Top</a> <i class="fa fa-arrow-circle-up"></i></span>
            </div>
        </div>
    }
</div>

<script type="text/javascript">
    $('#customer').val($('#clientname').val());

    // CopyDivisionToBillingGroup
    //$("#divisionid").change(function () {
    //    var selectedText = $('#divisionid option:selected').text();
    //    $('#billinggroup').val(selectedText);
    //});

    function SampleOrderAlert(productdetailid) {
        var alerturl = '@Url.Action("CheckProductForAlert", "Orders")';

        $.getJSON(alerturl,
            { id: productdetailid },
            function (jsonobj) {
                $.alert(jsonobj, "Product ID: " + productdetailid);
            });
    }

    function PullRequestor(requestorid) {
        var contactdetailurl = '@Url.Action("PullContactDetails", "Orders")';

        $.getJSON(contactdetailurl,
            { id: requestorid },
            function (jsonobj) {
                $("#RequestorName").val(jsonobj.FullName);
                $("#RequestorEmail").val(jsonobj.Email);
                $("#RequestorPhone").val(jsonobj.Phone);
                $("#RequestorFax").val(jsonobj.Fax);
            });
    }

    function PullSalesRep(salesrepid) {
        var contactdetailurl = '@Url.Action("PullContactDetails", "Orders")';

        $.getJSON(contactdetailurl,
            { id: salesrepid },
            function (jsonobj) {
                $("#SalesRepName").val(jsonobj.FullName);
                $("#SalesRepEmail").val(jsonobj.Email);
                $("#SalesRepPhone").val(jsonobj.Phone);
                $("#SalesRepTerritory").val(jsonobj.Account);
            });
    }
</script>