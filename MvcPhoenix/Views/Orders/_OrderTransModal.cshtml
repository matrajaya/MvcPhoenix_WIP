@model MvcPhoenix.Models.OrderTrans

@{


}

<div id="dialogPlaceholderModal" class="modal fade" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Order Transaction <small>@Model.ordertransid</small></h4>
            </div>
            <div id="dialogPlaceholderBody" class="modal-body">

                @using (Ajax.BeginForm("SaveTrans", "Orders", new AjaxOptions
                {
                    HttpMethod = "POST",
                    UpdateTargetId = "dialogResult",
                    OnSuccess = "UpdateTransList",
                    InsertionMode = InsertionMode.Replace,
                    OnFailure = "alert('SAVE FAILURE')"
                }))
                {
                    @Html.HiddenFor(m => m.ordertransid)
                    @Html.HiddenFor(m => m.orderid)
                    @Html.HiddenFor(m => m.clientid)

                    @Html.HiddenFor(m=>m.createdate)
                    @Html.HiddenFor(m => m.createuser)



                    <div class="row">
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(m => m.transtype, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.transtype, Model.ListOfOrderTransTypes, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.transtype)
                        </div>

                        <div class="col-md-6 form-group">
                            @Html.LabelFor(m => m.transdate, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.transdate, "{0:dd-MMM-yyyy}", new { @class = "date-picker form-control" })
                            @Html.ValidationMessageFor(m => m.transdate)
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-6 form-group">
                            @Html.LabelFor(m => m.orderitemid, new { @class = "control-label" })
                            @Html.DropDownListFor(m => m.orderitemid, fnListOfOrderItemIDs(@Model.orderid), new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.orderitemid)
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.transqty, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.transqty, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.transqty)
                        </div>
                        <div class="col-md-3 form-group">
                            @Html.LabelFor(m => m.transamount, new { @class = "control-label" })
                            @Html.TextBoxFor(m => m.transamount, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.transamount)
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12 form-group">
                            @Html.LabelFor(m => m.comments, new { @class = "control-label" })
                            @Html.TextAreaFor(m => m.comments, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.comments)
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-4 form-group">
                            <span class="pull-left">
                                <input type="submit" value="Save" class="btn btn-md btn-success" />
                            </span>
                        </div>
                        <div class="col-md-4 form-group">
                            @Ajax.ActionLink("Delete Trans", "DeleteTrans", "Orders", new { id = Model.ordertransid }, new AjaxOptions
                                       {
                                           HttpMethod = "GET",
                                           UpdateTargetId = "dialogResult",
                                           InsertionMode = InsertionMode.Replace,
                                           OnSuccess = "UpdateAndClose",
                                           Confirm = "Are you sure you want to delete this item?",
                                       }, new { @class = "btn btn-danger" })
                        </div>
                        <div class="col-md-4 form-group pull-right">
                            <span class="pull-right">
                                <input type="button" value="Close" onclick="$('#dialogPlaceholderModal').modal('hide')" class="btn btn-primary" />
                            </span>
                        </div>


                    </div>

                    <div class="row">
                        <div class="col-md-12 form-group">
                            <span id="dialogResult" class="text-center" style="font-weight:bold;">

                            </span>
                        </div>
                    </div>

                }


            </div>
        </div>
    </div>
</div>
<script type="text/javascript">

    function UpdateAndClose()
    {
        $("#dvOrderTransList").load('@Url.Action("fnOrderTransList", "Orders", new { id = @Model.orderid })');
        $('#dialogPlaceholderModal').modal('hide')
    }

    function UpdateTransList()
    {
            $("#dvOrderTransList").load('@Url.Action("fnOrderTransList", "Orders", new { id = @Model.orderid })');
    }




</script>
@functions
{
    // used to let user select the orderitemid to apply this trans to
    private static List<SelectListItem> fnListOfOrderItemIDs(int? id)
    {
        using (var db = new MvcPhoenix.EF.CMCSQL03Entities())
        {
            List<SelectListItem> mylist = new List<SelectListItem>();
            mylist = (from t in db.tblOrderItem
                      where t.OrderID == id
                      orderby t.ProductCode
                      select new SelectListItem { Value = t.ItemID.ToString(), Text = t.ProductCode }).ToList();
            mylist.Insert(0, new SelectListItem { Value = "0", Text = "None" });
            return mylist;
        }

    }

}
