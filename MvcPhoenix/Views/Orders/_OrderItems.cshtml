@model List<MvcPhoenix.Models.OrderItem>
@{
    ViewBag.Title = "Order Items";
}
<div class="table-responsive">
    <table id="mytable" class="table table-hover table-striped" style="font-size:.85em;">
        <tr>
            <th>#</th>
            <th>Product Code</th>
            <th>Name</th>
            <th>Size</th>
            <th>Lot#</th>
            <th>Qty</th>
            <th>Ship Date</th>
            <th class="text-center">BO</th>
            <th class="text-center">Delay</th>
            <th class="text-center">Avail</th>
            <th class="text-center">A-Status</th>
            <th id="noprint" class="text-center"><i class="fa fa-fw fa-pencil-square-o"></i></th>
        </tr>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@(Model.IndexOf(item) + 1)</td>
                    <td>@item.ProductCode</td>
                    <td>@item.ProductName</td>
                    <td>@item.Size</td>
                    <td>@item.LotNumber</td>
                    <td class="text-center">@item.Qty</td>
                    <td>@String.Format("{0:dd MMM yyyy}", item.ShipDate)</td>
                    <td class="text-center"><input type="checkbox" checked="@item.BackOrdered" readonly="readonly" onclick="return false" /></td>
                    <td class="text-center">
                    <input type="checkbox" checked="@item.NonCMCDelay" readonly="readonly" onclick="return false" />
                    </td>
                    <td class="text-center">@item.QtyAvailable.ToString()</td>
                    <td class="text-center">@item.AllocateStatus</td>

                    <td id="noprint" class="text-center">
                        @Ajax.ActionLink("Edit", "EditItem", "Orders", new { id = @item.ItemID }, new AjaxOptions
                             {
                                 UpdateTargetId = "dialogPlaceholder",
                                 InsertionMode = InsertionMode.Replace,
                                 HttpMethod = "GET",
                                 OnSuccess = "$('#dialogPlaceholderModal').modal('show');"
                             }, new { @class = "btn btn-xs btn-primary" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Start Allocate Buttons -->
    <!-- dvAllocateResult is in Edit.cshtml to provide a place to stick a message after allocation -->

    <div class="row text-center">
        <div class="form-group col-md-3">

            @Ajax.ActionLink("Allocate from Shelf (Available Stock Only)", "AllocateFromShelf", "Orders", new { id = Model[0].OrderID, IncludeExpiredStock = false },
                        new AjaxOptions
                             {
                        UpdateTargetId = "dvAllocateResult",
                        InsertionMode=InsertionMode.Replace,
                        HttpMethod = "GET",
                        OnSuccess = "UpdateItemsList",
                        OnFailure = "alert('Error- Could not allocate order')"
                    }, new { @class = "btn btn-sm btn-primary" })
        </div>

        <div class="form-group col-md-3">
            @Ajax.ActionLink("Allocate from Shelf (QC Stock)", "AllocateFromShelf", "Orders", new { id = Model[0].OrderID, IncludeExpiredStock = true },
                        new AjaxOptions
                             {
                        UpdateTargetId = "dvAllocateResult",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET",
                        OnSuccess = "UpdateItemsList",
                        OnFailure = "alert('Error- Could not allocate order')",
                    }, new { @class = "btn btn-sm btn-primary" })
        </div>
        <div class="form-group col-md-3">
            @Ajax.ActionLink("Allocate from Bulk (Available Stock Only)", "AllocateFromBulk", "Orders", new { id = Model[0].OrderID, IncludeExpiredStock = false },
                        new AjaxOptions
                    {
                        UpdateTargetId = "dvAllocateResult",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET",
                        OnSuccess = "UpdateItemsList",
                        OnFailure = "alert('Error- Could not allocate order')",
                    }, new { @class = "btn btn-sm btn-primary" })
        </div>

        <div class="form-group col-md-3">
            @Ajax.ActionLink("Allocate from Bulk (QC Stock)", "AllocateFromBulk", "Orders", new { id = Model[0].OrderID, IncludeExpiredStock = true },
                        new AjaxOptions
                    {
                        UpdateTargetId = "dvAllocateResult",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET",
                        OnSuccess = "UpdateItemsList",
                        OnFailure = "alert('Error- Could not allocate order')",
                    }, new { @class = "btn btn-sm btn-primary" })
        </div>
    </div>

<!-- End Allocate Buttons -->

<script type="text/javascript">

    function UpdateItemsList()
    {

        $("#dvOrderItemsList").load('@Url.Action("fnOrderItemsList", "Orders", new { id = @Model[0].OrderID })');

    }
</script>