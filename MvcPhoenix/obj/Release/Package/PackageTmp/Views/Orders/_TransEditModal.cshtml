@model MvcPhoenix.Models.OrderTrans

@{
    Model.orderid = Convert.ToInt32(Session["OrderID"]);
}
    

<div id="OrderTransaction">
    <input id="widget001_OrderTransID" name="widget001_OrderTransID" type="hidden" value="@Model.ordertransid" />
    <input id="widget001_ClientID" name="widget001_ClientID" type="hidden" value="@Model.clientid" />
    <input id="widget001_OrderID" name="widget001_OrderID" type="hidden" value="@Model.orderid" />

    <div class="col-md-12 text-center">
        @if (Model.pagemode == "")
        {
            <h3>Changes Made</h3>
        }
        else
        {
            <h3>@Model.pagemode</h3>
        }
        <hr />
    </div>

    <div class="row">
        <div class="col-md-6 form-group">
            @Html.LabelFor(m => m.transtype, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.transtype, fnListOfOrderTransTypes(), new { @class = "form-control", id = "widget001_TransType" })
            @Html.ValidationMessageFor(m => m.transtype)
        </div>
        <div class="col-md-6 form-group">
            @Html.LabelFor(m => m.transdate, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.transdate, new { @class = "form-control datepicker", id = "widget001_TransDate", disabled = "disabled" })
            @Html.ValidationMessageFor(m => m.transdate)
        </div>
    </div>
    <div class="row">
        <div class="col-md-6 form-group">
            @Html.LabelFor(m => m.orderitemid, new { @class = "control-label" })
            @Html.DropDownListFor(m => m.orderitemid, fnListOfOrderItemIDs(Convert.ToInt32(Model.orderid)), new { @class = "form-control", id = "widget001_OrderItemID" })
            @Html.ValidationMessageFor(m => m.orderitemid)
        </div>
        <div class="col-md-3 form-group">
            @Html.LabelFor(m => m.transqty, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.transqty, new { @class = "form-control", id = "widget001_TransQty" })
            @Html.ValidationMessageFor(m => m.transqty)
        </div>
        <div class="col-md-3 form-group">
            @Html.LabelFor(m => m.transamount, new { @class = "control-label" })
            @Html.TextBoxFor(m => m.transamount, new { @class = "form-control", id = "widget001_TransAmount" })
            @Html.ValidationMessageFor(m => m.transamount)
        </div>

    </div>
    <div class="row">
        <div class="col-md-12 form-group">
            @Html.LabelFor(m => m.comments, new { @class = "control-label" })
            @Html.TextAreaFor(m => m.comments, new { @class = "form-control", id = "widget001_TransComments" })
            @Html.ValidationMessageFor(m => m.comments)
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 form-group">
            <span>
                <input type="button" value="Save" onclick="widget001_SaveOrderTrans()" class="btn btn-md btn-success" />
            </span>
            <span class="pull-right">
                @*Refresh the HTML table AND close the modal*@
                @Ajax.ActionLink("Close", "RefreshTransView", "Orders", null,
                    new AjaxOptions
                    {
                        UpdateTargetId = "widget001",
                        InsertionMode = InsertionMode.Replace,
                        HttpMethod = "GET",
                        OnBegin = " $('#transmodal').modal('hide');"
                    }, new { @class = "btn btn-danger" })
            </span>
        </div>
        <div class="col-lg-12">
            <span>
                @Html.DisplayFor(m => m.updateresult)
            </span>
        </div>
    </div>
</div>


@section Scripts {
    <script>
        $(function () {
            $("form input").tooltipValidation({
                placement: "top"
            });
            $("form select").tooltipValidation({
                placement: "top"
            });
        });
    </script>

    <script type="text/javascript">
        $(function () {
            $('.datepicker').datepicker();
        });
    </script>
}

<script type="text/javascript">
    function widget001_SaveOrderTrans() {
        // Build obj and push to controller then update modal content from controller
        var ItemData = {
            ordertransid: $("#widget001_OrderTransID").val(),
            clientid: $("#widget001_ClientID").val(),
            orderid: $("#widget001_OrderID").val(),
            orderitemid: $("#widget001_OrderItemID").val(),
            userid: 0,
            transtype: $("#widget001_TransType").val(),
            transdate: $("#widget001_TransDate").val(),
            transqty: $("#widget001_TransQty").val(),
            transamount: $("#widget001_TransAmount").val(),
            comments: $("#widget001_TransComments").val(),
        };

        $.ajax({
            type: 'POST',
            url: "@Url.Action("SaveOrderTrans", "Orders")",
            data: ItemData,
            success: function (result) { $("#modal100").html(result); }
        });
    }
</script>

@functions
{
    private static List<SelectListItem> fnListOfOrderItemIDs(int myorderid)
    {
        MvcPhoenix.EF.CMCSQL03Entities widget002_db = new MvcPhoenix.EF.CMCSQL03Entities();
        List<SelectListItem> mylist = new List<SelectListItem>();
        mylist = (from t in widget002_db.tblOrderItem
                  where t.OrderID == myorderid
                  orderby t.ProductCode
                  select new SelectListItem { Value = t.ItemID.ToString(), Text = t.ProductCode }).ToList();
        mylist.Insert(0, new SelectListItem { Value = "0", Text = "None" });
        widget002_db.Dispose();
        return mylist;
    }

    private static List<SelectListItem> fnListOfOrderTransTypes()
    {
        List<SelectListItem> mylist = new List<SelectListItem>();
        mylist.Add(new SelectListItem { Text = "BIOC", Value = "BIOC" });
        mylist.Add(new SelectListItem { Text = "BLND", Value = "BLND" });
        mylist.Add(new SelectListItem { Text = "CLEN", Value = "CLEN" });
        mylist.Add(new SelectListItem { Text = "FLAM", Value = "FLAM" });
        mylist.Add(new SelectListItem { Text = "FREZ", Value = "FREZ" });
        mylist.Add(new SelectListItem { Text = "HAZD", Value = "HAZD" });
        mylist.Add(new SelectListItem { Text = "HEAT", Value = "HEAT" });
        mylist.Add(new SelectListItem { Text = "KOSH", Value = "KOSH" });
        mylist.Add(new SelectListItem { Text = "LABL", Value = "LABL" });
        mylist.Add(new SelectListItem { Text = "MISC", Value = "MISC" });
        mylist.Add(new SelectListItem { Text = "MEMO", Value = "MEMO" });
        mylist.Add(new SelectListItem { Text = "NALG", Value = "NALG" });
        mylist.Add(new SelectListItem { Text = "NITR", Value = "NITR" });
        mylist.Add(new SelectListItem { Text = "REFR", Value = "REFR" });
        mylist.Add(new SelectListItem { Text = "SAMP", Value = "SAMP" });
        //mylist.Insert(0, new SelectListItem { Value = "0", Text = "Type" });

        return mylist;
    }
}